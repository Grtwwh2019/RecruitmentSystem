<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zzj.recruitment.dao.AnnounceMapper" >
  <resultMap id="BaseResultMap" type="com.zzj.recruitment.pojo.Announce" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="title" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="content" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="type" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="sender" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="receiver" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="status" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="createTime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="updateTime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, title, content, type, sender, receiver, status, createTime, updateTime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from announce
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from announce
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zzj.recruitment.pojo.Announce" >
    insert into announce (id, title, content, 
      type, sender, receiver, 
      status, createTime, updateTime
      )
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{sender,jdbcType=INTEGER}, #{receiver,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zzj.recruitment.pojo.Announce" >
    insert into announce
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="sender != null" >
        sender,
      </if>
      <if test="receiver != null" >
        receiver,
      </if>
      <if test="status != null" >
        status,
      </if>
        createTime,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="sender != null" >
        #{sender,jdbcType=INTEGER},
      </if>
      <if test="receiver != null" >
        #{receiver,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      now(),
    </trim>
    <selectKey resultType="integer" keyProperty="id" keyColumn="id" order="AFTER">
      select last_insert_id()
    </selectKey>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzj.recruitment.pojo.Announce" >
    update announce
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="sender != null" >
        sender = #{sender,jdbcType=INTEGER},
      </if>
      <if test="receiver != null" >
        receiver = #{receiver,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
        updateTime = now(),
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zzj.recruitment.pojo.Announce" >
    update announce
    set title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      sender = #{sender,jdbcType=INTEGER},
      receiver = #{receiver,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getAnnounceList" resultType="com.zzj.recruitment.vo.AnnounceListVo" parameterType="int">
    select a.id as id, a.title as title, a.content as content, a.type as type, u.nickName as sender,
    a.receiver as receiver, a.`status` as `status`, a.createTime as createTime
    from announce as a left join `user` as u on a.sender = u.id
    where receiver = #{userId} and a.`status` = #{readed}
    order by a.createTime desc
  </select>

  <select id="selectByannounceId" parameterType="integer" resultType="com.zzj.recruitment.vo.AnnounceListVo">
    select a.id as id, a.title as title, a.content as content, a.type as type, u.nickName as sender,
    a.receiver as receiver, a.`status` as `status`, a.createTime as createTime
    from announce as a left join `user` as u on a.sender = u.id
    where a.id = #{announceId}
  </select>

  <select id="selectAnnounceListBySearchVo" parameterType="com.zzj.recruitment.vo.AnnounceSearchVo" resultType="com.zzj.recruitment.vo.AnnounceListVo">
    select a.id as id, a.title as title, a.content as content, a.type as type,
    u.nickName as receiverName, a.`status` as `status`, a.createTime as createTime
    from announce as a
    left join `user` as u on a.receiver = u.id
    <where>
      <if test="announceSearchVo.id != null">
        and id = #{announceSearchVo.id}
      </if>
      <if test="announceSearchVo.title != null and announceSearchVo.title != ''">
        and upper(title) like upper(concat('%',#{announceSearchVo.title},'%'))
      </if>
      <if test="announceSearchVo.type != null">
        and `type` = #{announceSearchVo.type}
      </if>
      <if test="announceSearchVo.receiver != null">
        and receiver = #{announceSearchVo.receiver}
      </if>
      <if test="announceSearchVo.status != null">
        and status = #{announceSearchVo.status}
      </if>
      <if test="announceSearchVo.createTImeFrom != null">
        and a.createTime <![CDATA[>=]]> #{announceSearchVo.createTImeFrom}
      </if>
      <if test="announceSearchVo.createTImeTo != null">
        and a.createTime <![CDATA[<=]]> #{announceSearchVo.createTImeTo}
      </if>
    </where>
    order by a.createTime desc

  </select>
</mapper>