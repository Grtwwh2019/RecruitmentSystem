<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zzj.recruitment.dao.CredentialMapper" >
  <resultMap id="BaseResultMap" type="com.zzj.recruitment.pojo.Credential" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="cname" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="cparent" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="createTime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="updateTime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>

  <resultMap id="certificationListResultMap" type="com.zzj.recruitment.vo.IndustryOrPositionSetListVo" >
    <id property="value" column="id"></id>
    <result property="label" column="cname"></result>
    <collection property="children" ofType="com.zzj.recruitment.vo.IndustryOrPositionSetListVo">
      <id property="value" column="id2"></id>
      <result property="label" column="cname2"></result>
    </collection>
  </resultMap>

  <sql id="Base_Column_List" >
    id, cname, cparent, createTime, updateTime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from credential
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from credential
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zzj.recruitment.pojo.Credential" >
    insert into credential (id, cname, cparent, 
      createTime, updateTime)
    values (#{id,jdbcType=INTEGER}, #{cname,jdbcType=VARCHAR}, #{cparent,jdbcType=INTEGER}, 
      #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zzj.recruitment.pojo.Credential" >
    insert into credential
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="cname != null" >
        cname,
      </if>
      <if test="cparent != null" >
        cparent,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cname != null" >
        #{cname,jdbcType=VARCHAR},
      </if>
      <if test="cparent != null" >
        #{cparent,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzj.recruitment.pojo.Credential" >
    update credential
    <set >
      <if test="cname != null" >
        cname = #{cname,jdbcType=VARCHAR},
      </if>
      <if test="cparent != null" >
        cparent = #{cparent,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zzj.recruitment.pojo.Credential" >
    update credential
    set cname = #{cname,jdbcType=VARCHAR},
      cparent = #{cparent,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getAllCertification" resultMap="certificationListResultMap">
    select c1.id as id, c1.cname as cname, c2.id as id2, c2.cname as cname2 from credential as c1 inner join credential as c2 on c1.id = c2.cparent
  </select>
</mapper>