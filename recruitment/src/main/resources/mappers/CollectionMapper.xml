<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zzj.recruitment.dao.CollectionMapper" >
  <resultMap id="BaseResultMap" type="com.zzj.recruitment.pojo.Collection" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="cpid" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="ccid" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="cuserid" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="createTime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="updateTime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, cpid, ccid, cuserid, createTime, updateTime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from collection
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from collection
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zzj.recruitment.pojo.Collection" >
    insert into collection (id, cpid, ccid, 
      cuserid, createTime, updateTime
      )
    values (#{id,jdbcType=INTEGER}, #{cpid,jdbcType=INTEGER}, #{ccid,jdbcType=INTEGER}, 
      #{cuserid,jdbcType=INTEGER}, now(), now()
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zzj.recruitment.pojo.Collection" >
    insert into collection
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="cpid != null" >
        cpid,
      </if>
      <if test="ccid != null" >
        ccid,
      </if>
      <if test="cuserid != null" >
        cuserid,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cpid != null" >
        #{cpid,jdbcType=INTEGER},
      </if>
      <if test="ccid != null" >
        #{ccid,jdbcType=INTEGER},
      </if>
      <if test="cuserid != null" >
        #{cuserid,jdbcType=INTEGER},
      </if>
        now(),
      now(),
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzj.recruitment.pojo.Collection" >
    update collection
    <set >
      <if test="cpid != null" >
        cpid = #{cpid,jdbcType=INTEGER},
      </if>
      <if test="ccid != null" >
        ccid = #{ccid,jdbcType=INTEGER},
      </if>
      <if test="cuserid != null" >
        cuserid = #{cuserid,jdbcType=INTEGER},
      </if>
        updateTime = now(),
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zzj.recruitment.pojo.Collection" >
    update collection
    set cpid = #{cpid,jdbcType=INTEGER},
      ccid = #{ccid,jdbcType=INTEGER},
      cuserid = #{cuserid,jdbcType=INTEGER},
      updateTime = now()
    where id = #{id,jdbcType=INTEGER}
  </update>

  <delete id="removeByPositionUserId">
    delete from collection where cpid = #{positionId} and cuserid= #{userId}
  </delete>

  <delete id="removeByCompanyUserId">
    delete from collection where ccid = #{companyId} and cuserid= #{userId}
  </delete>

  <insert id="addByPositionUserId">
    insert into collection (cpid, cuserid, createTime) values (#{positionId}, #{userId}, now())
  </insert>

  <insert id="addByCompanyUserId">
    insert into collection (ccid, cuserid, createTime) values (#{companyId}, #{userId}, now())
  </insert>

  <select id="selectByPositionUserId" resultType="int">
    select count(1) from collection where cpid = #{positionId} and cuserid = #{userId}
  </select>


  <select id="selectByCompanyUserId" resultType="int">
    select count(1) from collection where cpid = #{companyId} and cuserid = #{userId}
  </select>

  <select id="selectPositionByUserId" resultType="int">
    select cpid from collection where cuserid = #{userId} and cpid is not null
  </select>


  <select id="selectCompanyByUserId" resultType="int">
    select ccid from collection where cuserid = #{userId} and ccid is not null
  </select>


  <select id="getPosisitonList" resultType="com.zzj.recruitment.vo.PosisitonListVo" parameterType="int">
    select e.id as id, e.ename as ename, pt.ptName as etype, city.cityName as ecity,
    e.esalaryfloor as esalaryfloor, e.esalaryceilie as esalaryceilie, e.educationrequire as educationrequire,
    com.logo as companyLogo, com.cname as ecompany, i.iName as industry,
    com.financing as financing,com.csize as csize, u.nickName as publisher,
    e.createTime as createTime
    from collection as c
    left join employment as e on c.cpid = e.id
    left join positiontypeset as pt on e.etypeid = pt.id
    left join city on e.ecityid = city.id
    left join company as com on e.ecompanyId = com.id
    left join `user` as u on e.epublisher = u.id
    left join industryset as i on com.industryId = i.id
    where c.cpid is not null and c.cuserid = #{userId}
    order by e.id asc
  </select>

  <select id="getCompanyList" resultType="com.zzj.recruitment.vo.CompanyListVo" parameterType="int">
    select e.id as id, e.cname as cname, e.logo as logo, e.financing as financing, i.iName as industry,
    e.csize as csize, city.cityName as ccity, e.representative as representative
    from collection as c
    left join company as e on c.ccid = e.id
    left join industryset as i on e.industryId = i.id
    left join city on e.ccity = city.id
    where c.ccid is not null and  c.cuserid = #{userId}
    order by e.id asc
  </select>


</mapper>